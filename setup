#!/usr/bin/env bash
#
# bashpass/setup - prep bashpass

declare SDN SBN GPGF DB
SDN="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"
SBN="$(basename "$(realpath "${BASH_SOURCE[0]}")")"

if ! tty -s; then
    echo -en "Fatal: You'll need to run ${SBN} in a terminal (or tty)!\n" >&2
    exit 1
elif [[ "${BASH_VERSINFO[0]}" -lt "4" ]]; then
    echo -en "Fatal: You'll need bash major version no less than 4.\n" >&2
    exit 1
elif [[ -z "$(type -P sqlite3 2> /dev/null)" ]]; then
    echo -en "Fatal: You need SQLite3 installed.\n" >&2
    exit 1
elif [[ -z "$(type -P gpg 2> /dev/null)" ]]; then
    echo -en "Fatal: You need GNU Privacy Guard v2 (gnupg) installed.\n" >&2
    exit 1
fi

if [[ -z "${1}" ]]; then
    GPGF="sample.gpg"
    DB="${GPGF%%.gpg}"
elif [[ "${1}" =~ .gpg$ ]]; then
    GPGF="${1}"
    DB="${GPGF%%.gpg}"
else
    GPGF="${1}.gpg"
    DB="${GPGF%%.gpg}"
fi

FPGPGF="${SDN}/databases/${GPGF}"
FPDB="${SDN}/databases/${DB}"

echo -ne " This script will:\n \
 1. Make a ${DB} SQLite3 file ... \n \
 2. encrypt it to ${GPGF} \n \
 3. Execute bashpass ${GPGF} \n"

if [[ "$(read -rp " Continue? [Y/n]: " r;echo "${r:-y}")" =~ ^[Yy] ]]; then
    sqlite3 "${FPDB}" < "${SDN}/examples/create.sql" && \
	gpg --default-recipient-self --output "${FPGPGF}" --encrypt "${FPDB}" && \
	"${SDN}/bashpass" "${GPGF}" && \
	echo -ne "From now on you'll be able to call bashpass with: bashpass ${GPGF}\n" >&2
fi
